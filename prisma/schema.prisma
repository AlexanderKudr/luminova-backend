generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  name         String  @unique //change it for userName property
  email        String  @unique
  password     String
  accessToken  String? @unique(map: "unique_user_accessToken")
  refreshToken String?

  personalInfo personalInfo?

  favoriteImages favoriteImages[]
  uploadedImages uploadedImages[]
  collection     collection[] //this should be an object(change it whenever i have time)
  confirmedemail Boolean?         @default(false)
}

model personalInfo {
  id           Int     @id @default(autoincrement())
  user_id      String  @unique
  firstName    String?
  lastName     String?
  personalSite String?
  bio          String?
  instagram    String?
  twitter      String?
  User         User    @relation(fields: [user_id], references: [id])
}

model favoriteImages {
  id        Int     @id @default(autoincrement())
  public_id String
  user_id   String?
  User      User?   @relation(fields: [user_id], references: [id])
}

model uploadedImages {
  id        Int     @id @default(autoincrement())
  user_id   String?
  public_id String
  User      User?   @relation(fields: [user_id], references: [id])
}

model collection {
  id               Int                @id @default(autoincrement())
  name             String
  description      String?
  user_id          String?
  User             User?              @relation(fields: [user_id], references: [id])
  collectionImages collectionImages[]
}

model collectionImages {
  id        Int    @id @default(autoincrement())
  public_id String

  collection_id Int?
  collection    collection? @relation(fields: [collection_id], references: [id])
}
